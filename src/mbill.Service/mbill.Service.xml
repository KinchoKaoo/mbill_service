<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mbill.Service</name>
    </assembly>
    <members>
        <member name="P:mbill.Service.Base.CrudApplicationSvc`5.Repository">
            <summary>
            仓储
            </summary>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.InsertAsync(mbill.Core.Domains.Entities.Bill.AssetEntity)">
            <summary>
            新增资产分类
            </summary>
            <param name="input">数据源</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.DeleteAsync(System.Int64)">
            <summary>
            删除资产分类
            </summary>
            <param name="id">资产分类id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.UpdateAsync(mbill.Core.Domains.Entities.Bill.AssetEntity)">
            <summary>
            更新资产分类
            </summary>
            <param name="entity">资产分类信息</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.GetGroupsAsync(System.Nullable{System.Int32})">
            <summary>
            获取分级后的组合类别数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.GetPageAsync(mbill.Service.Bill.Asset.Input.AssetPagingDto)">
            <summary>
            获取资产分类分页
            </summary>
            <param name="pagingDto">分页参数</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.GetAsync(System.Int64)">
            <summary>
            获取父项 by id
            </summary>
            <param name="id">资产Id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.GetParentAsync(System.Int64)">
            <summary>
            获取父项 by 子项 id
            </summary>
            <param name="id">资产子项Id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Asset.IAssetSvc.GetParentsAsync">
            <summary>
            获取父项集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.Name">
            <summary>
            资产分类名
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.ParentId">
            <summary>
            父级Id，默认0
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.Type">
            <summary>
            资产分类类型：存款、负债
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.Amount">
            <summary>
            资产金额
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Asset.Input.ModifyAssetDto.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:mbill.Service.Bill.Bill.BillSvc.MapToSimpleDto(mbill.Core.Domains.Entities.Bill.BillEntity)">
            <summary>
            映射Dto
            </summary>
            <param name="bill"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.CreateAsync(mbill.Service.Bill.Bill.Input.ModifyBillInput)">
            <summary>
            新增账单
            </summary>
            <param name="input">数据源</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetDetailAsync(System.Int64)">
            <summary>
            获取账单详情
            </summary>
            <param name="id">账单id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.DeleteAsync(System.Int64)">
            <summary>
            删除账单信息
            </summary>
            <param name="id">账单id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.UpdateAsync(mbill.Service.Bill.Bill.Input.ModifyBillInput)">
            <summary>
            更新账单信息
            </summary>
            <param name="input">账单信息</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetByDayAsync(mbill.Service.Bill.Bill.Input.DayBillInput)">
            <summary>
            获取指定日期账单
            </summary>
            <param name="input">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetByMonthPagesAsync(mbill.Service.Bill.Bill.Input.MonthBillPagingInput)">
            <summary>
            获取分页账单数据
            </summary>
            <param name="input">分页查询</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.RangeHasBillDaysAsync(mbill.Service.Bill.Bill.Input.RangeHasBillDaysInput)">
            <summary>
            获取日期范围内存在账单的日期
            </summary>
            <param name="input">查询入参</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetMonthTotalStatAsync(mbill.Service.Bill.Bill.Input.MonthTotalStatInput)">
            <summary>
            获取指定月份账单总金额
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetYearTotalStatAsync(mbill.Service.Bill.Bill.Input.YearTotalStatInput)">
            <summary>
            获取指定日期各类型账单总额统计
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetStatisticsTotalAsync(mbill.Service.Bill.Bill.Input.BillDateInput)">
            <summary>
            获取指定日期各类型账单总额统计
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetExpendCategoryStatisticsAsync(mbill.Service.Bill.Bill.Input.BillDateInput)">
            <summary>
            获取指定日期支出分类统计
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetWeekExpendTrendStatisticsAsync(mbill.Service.Bill.Bill.Input.BillDateInput)">
            <summary>
            获取当前月份所有周的支出趋势统计
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Bill.IBillSvc.GetMonthExpendTrendStatisticsAsync(mbill.Service.Bill.Bill.Input.BillDateInput,System.Int32)">
            <summary>
            获取当前月往前5个月的支出趋势统计
            </summary>
            <param name="input"></param>
            <param name="count">月数</param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.DayBillInput.Date">
            <summary>
            指定的日期
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.DayBillInput.Type">
            <summary>
            账单类型
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.DayBillInput.CategoryId">
            <summary>
            账单分类
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.DayBillInput.AssetId">
            <summary>
            账单账户
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.CategoryId">
            <summary>
            分类Id
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.AssetId">
            <summary>
            资产Id
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.Amount">
            <summary>
            金额
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.Type">
            <summary>
            记录类型：支出、收入、转账、还款
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.Description">
            <summary>
            说明
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.Address">
            <summary>
            地点
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.ModifyBillInput.Time">
            <summary>
            记录日期：时间
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthBillPagingInput.Month">
            <summary>
            指定的年月
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthBillPagingInput.Type">
            <summary>
            账单类型
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthBillPagingInput.CategoryId">
            <summary>
            账单分类
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthBillPagingInput.AssetId">
            <summary>
            账单账户
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthTotalStatInput.Month">
            <summary>
            指定的年月
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.RangeHasBillDaysInput.BeginDate">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.RangeHasBillDaysInput.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.YearTotalStatInput.Year">
            <summary>
            指定的年
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthPreOrderPagingInput.Month">
            <summary>
            指定的年月
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Input.MonthPreOrderPagingInput.Name">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.BillDateWithTotalDto.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.BillDateWithTotalDto.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.BillDateWithTotalDto.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.BillDateWithTotalDto.Total">
            <summary>
            账单总数
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.MonthTotalStatDto.Income">
            <summary>
            收入（格式化后）
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Bill.Output.MonthTotalStatDto.Expend">
            <summary>
            支出（格式化后）
            </summary>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.InsertAsync(mbill.Core.Domains.Entities.Bill.CategoryEntity)">
            <summary>
            新增账单分类
            </summary>
            <param name="categroy">数据源</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.DeleteAsync(System.Int64)">
            <summary>
            删除账单分类信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.UpdateAsync(mbill.Core.Domains.Entities.Bill.CategoryEntity)">
            <summary>
            更新账单分类
            </summary>
            <param name="categroy">账单分类信息</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.GetGroupsAsync(System.Nullable{System.Int32})">
            <summary>
            获取分级后的组合类别数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.GetPageAsync(mbill.Service.Bill.Category.Input.CategoryPagingDto)">
            <summary>
            获取账单分类分页
            </summary>
            <param name="pagingDto">分页参数</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.GetAsync(System.Int64)">
            <summary>
            获取分类
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.GetParentAsync(System.Int64)">
            <summary>
            获取父项 by 子项 id
            </summary>
            <param name="id">分类子项Id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Bill.Category.ICategorySvc.GetParentsAsync">
            <summary>
            获取账单分类父项集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.Name">
            <summary>
            账单分类名
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.ParentId">
            <summary>
            父级Id，默认0
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.Type">
            <summary>
            分类类型：支出、收入
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.Budget">
            <summary>
            预算金额
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:mbill.Service.Bill.Category.Input.ModifyCategoryDto.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="M:mbill.Service.Core.Auth.IAccountSvc.AccountLoginAsync(mbill.Service.Core.Auth.Input.AccountLoginDto)">
            <summary>
            账户登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Auth.IAccountSvc.WxLoginAsync(mbill.Service.Core.Auth.Input.WxLoginInput)">
            <summary>
            微信登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Auth.IAccountSvc.GetTokenByRefreshAsync(System.String)">
            <summary>
            刷新Token
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Auth.IJwtTokenSvc.CreateTokenAsync(mbill.Core.Domains.Entities.User.UserEntity)">
            <summary>
            创建Token和RefreshToken
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Auth.IJwtTokenSvc.RefreshTokenAsync(System.String)">
            <summary>
            刷新token
            </summary>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Core.Auth.Input.AccountLoginDto.Username">
            <summary>
            登录名
            </summary>
            <example>
            admin
            </example>
        </member>
        <member name="P:mbill.Service.Core.Auth.Input.AccountLoginDto.Password">
            <summary>
            密码
            </summary>
            <example>
            123456
            </example>
        </member>
        <member name="M:mbill.Service.Core.Auth.JwtTokenSvc.GenerateToken(System.Int32)">
            <summary>
            生成RefreshToken
            </summary>
            <param name="size">长度</param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Gender">
            <summary>
            性别，0：未知，1：男，2：女
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.AvatarUrl">
            <summary>
            头像地址
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Auth.Output.UserSimpleDto.Days">
            <summary>
            使用app天数
            </summary>
        </member>
        <member name="M:mbill.Service.Core.DataSeed.IDataSeedContributor.InitAdministratorPermissionAsync">
            <summary>
            初始化超级管理员角色权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.DataSeed.IDataSeedContributor.InitPermissionAsync(System.Collections.Generic.List{mbill.Core.Security.PermissionDefinition})">
            <summary>
            初始化权限，根据PermissionAttribute生成权限，改变的则更新，否则新增
            </summary>
            <param name="permissions"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Files.IFileSvc.UploadAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Int32)">
            <summary>
            单文件上传，键为file
            </summary>
            <param name="file">文件流</param>
            <param name="type">类型</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Files.LocalFileSvc.UploadAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Int32)">
            <summary>
            本地文件上传，秒传（根据lin_file表中的md5,与当前文件的路径是否在本地），如果不在，重新上传，覆盖文件表记录
            </summary>
            <param name="file"></param>
            <param name="type"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Files.LocalFileSvc.LocalUploadAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            本地文件上传，生成目录格式 {STORE_DIR}/{year}/{month}/{day}/{guid}.文件后缀
            images/2022-01-12/fba73a0c-f2f7-499a-8ed8-5b10554d43b0.jpg
            </summary>
            <param name="file"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Logger.ILogSvc.GetPagesAsync(mbill.Service.Core.Logger.Input.LogPagingDto)">
            <summary>
            获取日志分页
            </summary>
            <param name="pagingDto"></param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.Authority">
            <summary>
            访问哪个权限
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.Message">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.Method">
            <summary>
            请求方法
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.Path">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.StatusCode">
            <summary>
            请求的http返回码
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Logger.Output.LogDto.Username">
            <summary>
            用户当时的昵称
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Permission.Input.DispatchPermissionsDto.RoleId">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:mbill.Service.Core.Permission.Input.DispatchPermissionsDto.PermissionIds">
            <summary>
            权限Id集合
            </summary>
        </member>
        <member name="M:mbill.Service.Core.Permission.IPermissionSvc.GetAllTreeAsync">
            <summary>
            获取所有权限(树形结构)
            </summary>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IPermissionSvc.GetAllStructualAsync">
            <summary>
            获取所有权限(Module分组结构化)
            </summary>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IPermissionSvc.CheckAsync(System.String)">
            <summary>
            检查当前登陆用户的分组权限
            </summary>
            <param name="permission"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IPermissionSvc.DispatchPermissionsAsync(mbill.Service.Core.Permission.Input.DispatchPermissionsDto)">
            <summary>
            配置角色权限
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IRoleSvc.InsertAsync(mbill.Service.Core.Permission.Input.ModifyRoleDto)">
            <summary>
            新增角色
            </summary>
            <param name="role">角色信息</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IRoleSvc.DeleteAsync(System.Int64)">
            <summary>
            删除角色
            </summary>
            <param name="id">角色Id</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IRoleSvc.UpdateAsync(mbill.Service.Core.Permission.Input.ModifyRoleDto)">
            <summary>
            更新角色
            </summary>
            <param name="role">账单分类信息</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IRoleSvc.GetAllAsync">
            <summary>
            获取所有角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Permission.IRoleSvc.GetAsync(System.Int64)">
            <summary>
            获取角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Gender">
            <summary>
            性别，0：未知，1：男，2：女
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.District">
            <summary>
            区
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Street">
            <summary>
            街道
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.AvatarUrl">
            <summary>
            头像地址
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.ConfirmPassword">
            <summary>
            确认密码
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Input.ModifyUserDto.RoleIds">
            <summary>
            权限
            </summary>
        </member>
        <member name="M:mbill.Service.Core.User.IUserIdentitySvc.VerifyUserPasswordAsync(System.Int64,System.String)">
            <summary>
            验证用户密码是否正确
            </summary>
            <param name="userId">用户Id</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.IUserIdentitySvc.VerifyWxOpenIdAsync(System.String)">
            <summary>
            验证微信用户OpenId是否存在
            </summary>
            <param name="openId">Wx OpenId</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.IUserIdentitySvc.ChangePasswordAsync(System.Int64,System.String)">
            <summary>
            根据用户ID，修改用户的密码
            </summary>
            <param name="userId"></param>
            <param name="newpassword"></param>
        </member>
        <member name="M:mbill.Service.Core.User.IUserSvc.CreateAsync(mbill.Core.Domains.Entities.User.UserEntity,System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            注册-新增一个用户
            </summary>
            <param name="user">用户</param>
            <param name="roleIds">分组Id集合</param>
            <param name="password">密码</param>
        </member>
        <member name="M:mbill.Service.Core.User.IUserSvc.GetAsync(System.Nullable{System.Int64})">
            <summary>
            获取用户信息，id为空时，通过Token获取
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.IUserSvc.GetPagesAsync(mbill.Service.Core.User.Input.UserPagingDto)">
            <summary>
            获取用户分页信息
            </summary>
            <param name="pagingDto">分页数据</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.IUserSvc.UpdateAsync(System.Int64,mbill.Core.Domains.Entities.User.UserEntity)">
            <summary>
            更新用户信息
            </summary>
            <param name="id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.IUserSvc.DeleteAsync(System.Int64)">
            <summary>
            删除用户（软删除）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Gender">
            <summary>
            性别，0：未知，1：男，2：女
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.District">
            <summary>
            区
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Street">
            <summary>
            街道
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.Address">
            <summary>
            地址详情
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.AvatarUrl">
            <summary>
            头像地址
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.LastLoginTime">
            <summary>
            最后一次登录的时间
            </summary>
        </member>
        <member name="P:mbill.Service.Core.User.Output.UserDto.IsEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="M:mbill.Service.Core.User.UserIdentitySvc.GetFirstByUserIdAsync(System.Int64)">
            <summary>
            通过UserId获取用户绑定信息
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.User.UserIdentitySvc.GetFirstByOpenIdAsync(System.String)">
            <summary>
            通过OpenId获取用户绑定信息
            </summary>
            <param name="openId">Wx OpenId</param>
            <returns></returns>
        </member>
        <member name="M:mbill.Service.Core.Wx.IWxSvc.GetCode2Session(System.String)">
            <summary>
            GetCode2Session
            </summary>
            <param name="code">wx.login获取到的code</param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderGroupInput.Name">
            <summary>
            分组名
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderGroupInput.Description">
            <summary>
            分组描述
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderInput.CategoryId">
            <summary>
            分类Id
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderInput.Amount">
            <summary>
            金额
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderInput.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Input.CreatePreOrderInput.Time">
            <summary>
            记录日期：时间
            </summary>
        </member>
        <member name="M:mbill.Service.PreOrder.IPreOrderGroupSvc.GetByMonthPagesAsync(mbill.Service.Bill.Bill.Input.MonthPreOrderPagingInput)">
            <summary>
            获取指定月份分页预购分组
            </summary>
            <param name="input">分页查询</param>
            <returns></returns>
        </member>
        <member name="P:mbill.Service.PreOrder.Output.PreOrderGroupDto.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Output.PreOrderGroupWithStatDto.Done">
            <summary>
            分组中已完成预购总数
            </summary>
        </member>
        <member name="P:mbill.Service.PreOrder.Output.PreOrderGroupWithStatDto.UnDone">
            <summary>
            分组中未完成预购总数
            </summary>
        </member>
    </members>
</doc>
